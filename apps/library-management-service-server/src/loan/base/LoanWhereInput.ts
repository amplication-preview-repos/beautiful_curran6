/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BookWhereUniqueInput } from "../../book/base/BookWhereUniqueInput";
import { ValidateNested, IsOptional, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { StringFilter } from "../../util/StringFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { MemberWhereUniqueInput } from "../../member/base/MemberWhereUniqueInput";
import { EnumLoanStatus } from "./EnumLoanStatus";

@InputType()
class LoanWhereInput {
  @ApiProperty({
    required: false,
    type: () => BookWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => BookWhereUniqueInput)
  @IsOptional()
  @Field(() => BookWhereUniqueInput, {
    nullable: true,
  })
  book?: BookWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  issueDate?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: () => MemberWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => MemberWhereUniqueInput)
  @IsOptional()
  @Field(() => MemberWhereUniqueInput, {
    nullable: true,
  })
  member?: MemberWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  returnDate?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumLoanStatus,
  })
  @IsEnum(EnumLoanStatus)
  @IsOptional()
  @Field(() => EnumLoanStatus, {
    nullable: true,
  })
  status?: "Option1";
}

export { LoanWhereInput as LoanWhereInput };
